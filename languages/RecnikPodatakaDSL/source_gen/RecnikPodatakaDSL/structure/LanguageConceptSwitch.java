package RecnikPodatakaDSL.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Aggregation = 0;
  public static final int CharacterDomain = 1;
  public static final int Constraint = 2;
  public static final int DateDomain = 3;
  public static final int Details = 4;
  public static final int Domain = 5;
  public static final int DomainStructureReference = 6;
  public static final int ExclusiveSpecialization = 7;
  public static final int Field = 8;
  public static final int FieldDefinition = 9;
  public static final int InclusiveSpecialization = 10;
  public static final int IntegerDomain = 11;
  public static final int LogicalDomain = 12;
  public static final int PredefinedDomain = 13;
  public static final int RealDomain = 14;
  public static final int SemanticDomain = 15;
  public static final int Set = 16;
  public static final int Structure = 17;
  public static final int StructureReference = 18;
  public static final int StructureRepository = 19;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x3978377fb27d4046L, 0x8bb64e4d30e8b603L);
    builder.put(0xc0192cc4ac8e39aL, Aggregation);
    builder.put(0xc0192cc4ad304acL, CharacterDomain);
    builder.put(0xc0192cc4addd9d7L, Constraint);
    builder.put(0xc0192cc4ad4aa7bL, DateDomain);
    builder.put(0xc0192cc4b033cb4L, Details);
    builder.put(0xc0192cc4ac8e37eL, Domain);
    builder.put(0xc0192cc4af79de3L, DomainStructureReference);
    builder.put(0xc0192cc4acd4726L, ExclusiveSpecialization);
    builder.put(0xc0192cc4ac7f23dL, Field);
    builder.put(0xc0192cc4ac8e34bL, FieldDefinition);
    builder.put(0xc0192cc4ad0ea6fL, InclusiveSpecialization);
    builder.put(0xc0192cc4ad23415L, IntegerDomain);
    builder.put(0xc0192cc4ad4aa69L, LogicalDomain);
    builder.put(0xc0192cc4ad23401L, PredefinedDomain);
    builder.put(0xc0192cc4ad3cb07L, RealDomain);
    builder.put(0xc0192cc4ad23402L, SemanticDomain);
    builder.put(0xc0192cc4ad1879dL, Set);
    builder.put(0xc0192cc4ac7ef01L, Structure);
    builder.put(0xc0192cc4acdb35bL, StructureReference);
    builder.put(0xc0192cc4ac7e760L, StructureRepository);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
